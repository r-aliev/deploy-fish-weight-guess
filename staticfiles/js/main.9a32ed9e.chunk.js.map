{"version":3,"sources":["components/Header/Header.js","components/Home/CustomizedDot.js","components/Home/Home.js","App.js","index.js"],"names":["darkTheme","createTheme","palette","mode","primary","main","Header","react_default","a","createElement","Grid","spacing","sx","flexGrow","style","marginBottom","ThemeProvider","theme","AppBar","position","color","enableColorOnDark","Toolbar","Typography","variant","noWrap","component","CustomizedDot","props","cx","cy","payload","x","y","width","height","fill","Species","viewBox","d","Home","_useState","useState","_useState2","Object","slicedToArray","key","setKey","_useState3","_useState4","files","setFiles","_useState5","_useState6","response","setResponse","useEffect","console","log","enqueueSnackbar","useSnackbar","container","item","xs","index_es","onChange","_files","acceptedFiles","maxFileSize","filesLimit","dropzoneText","showFileNames","Button","onClick","length","headers","Content-Disposition","concat","name","formData","FormData","append","fetch","method","header","body","then","res","ok","json","data","JSON","parse","prediction","catch","err","message","my","sampleData","Fragment","LineChart","Line","type","dataKey","stroke","dot","Home_CustomizedDot","CartesianGrid","XAxis","label","value","offset","YAxis","angle","Tooltip","App","notistack_esm","maxSnack","components_Header_Header","components_Home_Home","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9a32ed9e.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#1976d2\",\n    },\n  },\n});\n\nconst Header = () => {\n  return (\n    <Grid spacing={2} sx={{ flexGrow: 1 }} style={{marginBottom: 20}}>\n      <ThemeProvider theme={darkTheme}>\n        <AppBar position=\"static\" color=\"primary\" enableColorOnDark>\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ flexGrow: 1 }}\n            >\n              Fish Weight guess\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </ThemeProvider>\n    </Grid>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst CustomizedDot = (props) => {\n  const { cx, cy, payload } = props;\n\n const color = () => {\n    switch(payload.Species){\n      case 'Smelt':\n        return 'grey';\n      case 'Pike':\n        return 'red';\n      case 'Perch':\n        return 'pink';\n      case 'Parkki':\n        return 'blue';\n      case 'Whitefish':\n        return 'white';\n      case 'Roach':\n        return 'brown';\n      case 'Bream':\n        return 'yellow';\n      default:\n        return 'black'\n    }\n  }\n\n  return (\n    <svg\n      x={cx - 10}\n      y={cy - 10}\n      width={20}\n      height={20}\n      fill={color()}\n      viewBox=\"0 0 1024 1024\"\n    >\n      <path d=\"M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z\" />\n    </svg>\n  );\n};\n\nexport default CustomizedDot;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n} from \"recharts\";\nimport CustomizedDot from \"./CustomizedDot\";\n\nconst Home = () => {\n  const [key, setKey] = useState(0);\n  const [files, setFiles] = useState([]);\n  const [response, setResponse] = useState([]);\n  useEffect(\n    () => {\n      console.log(\"use\", response);\n    },\n    [response] //This is dependency and it will run only when data is changed\n  );\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const onSubmit = () => {\n    console.log(files);\n    if (files.length) {\n      const headers = {\n        \"Content-Disposition\": `attachment; filename=${files[0].name}`,\n      };\n      const formData = new FormData();\n      formData.append(\"file\", files[0], files[0].name);\n      fetch(`/api/`, {\n        method: \"POST\",\n        header: headers,\n        body: formData,\n      })\n        .then((res) => {\n          if (!res.ok) {\n            throw res;\n          }\n          setKey(key + 1);\n          return res.json();\n        })\n        .then((data) => {\n          setResponse(JSON.parse(data.prediction));\n          enqueueSnackbar(`Prediction response is received`, {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          err.json().then((data) => {\n            enqueueSnackbar(`${data.message}`, { variant: \"error\" });\n          });\n        });\n    }\n  };\n\n  const hadleGetSample = () => {\n     fetch(`/api/`, {\n\n     })\n      .then((res) => {\n        if (!res.ok) {\n          throw res;\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setResponse(JSON.parse(data.sampleData));\n        enqueueSnackbar(`Sample data was successfully fetched`, {\n          variant: \"success\",\n        });\n      })\n   }\n   \n\n  \n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <DropzoneArea\n          key={key}\n          onChange={(_files) => setFiles(_files)}\n          acceptedFiles={[\".csv\"]}\n          maxFileSize={50e6}\n          filesLimit={1}\n          dropzoneText=\"Click or Drop a .csv file here\"\n          showFileNames\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant=\"contained\" onClick={onSubmit}>\n          Submit\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        \n          <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1 }} my={2}>\n            If you want to test our app with our data, click to the button.\n          </Typography>\n          <Button variant=\"contained\" onClick={hadleGetSample}>\n            Generate a Sample\n          </Button>\n        \n      </Grid>\n      {response.length > 0 && (\n        <>\n          <Grid item xs={6} my={5}>\n            <LineChart width={600} height={300} data={response}>\n              <Line\n                type=\"monotone\"\n                dataKey=\"LengthVer\"\n                stroke=\"#8884d8\"\n                dot={<CustomizedDot />}\n              />\n              <CartesianGrid stroke=\"#ccc\" />\n              <XAxis\n                dataKey=\"Weight\"\n                label={{\n                  value: \"Weight\",\n                  position: \"insideBottomRight\",\n                  offset: 0,\n                }}\n              />\n              <YAxis\n                label={{\n                  value: \"LengthVer\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                }}\n              />\n              <Tooltip />\n            </LineChart>\n          </Grid>\n\n          <Grid item xs={6} my={5}>\n            <LineChart width={600} height={300} data={response}>\n              <Line\n                type=\"monotone\"\n                dataKey=\"LengthDia\"\n                stroke=\"#8884d8\"\n                dot={<CustomizedDot />}\n              />\n              <CartesianGrid stroke=\"#ccc\" />\n              <XAxis\n                dataKey=\"Weight\"\n                label={{\n                  value: \"Weight\",\n                  position: \"insideBottomRight\",\n                  offset: 0,\n                }}\n              />\n              <YAxis\n                label={{\n                  value: \"LengthDia\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                }}\n              />\n              <Tooltip />\n            </LineChart>\n          </Grid>\n\n          <Grid item xs={6} my={5}>\n            <LineChart width={600} height={300} data={response}>\n              <Line\n                type=\"monotone\"\n                dataKey=\"LengthCro\"\n                stroke=\"#8884d8\"\n                dot={<CustomizedDot />}\n              />\n              <CartesianGrid stroke=\"#ccc\" />\n              <XAxis\n                dataKey=\"Weight\"\n                label={{\n                  value: \"Weight\",\n                  position: \"insideBottomRight\",\n                  offset: 0,\n                }}\n              />\n              <YAxis\n                label={{\n                  value: \"LengthCro\",\n                  angle: -90,\n                  position: \"insideLeft\",\n                }}\n              />\n              <Tooltip />\n            </LineChart>\n          </Grid>\n\n          <Grid item xs={6} my={5}>\n            <LineChart width={600} height={300} data={response}>\n              <Line\n                type=\"monotone\"\n                dataKey=\"Height\"\n                stroke=\"#8884d8\"\n                dot={<CustomizedDot />}\n              />\n              <CartesianGrid stroke=\"#ccc\" />\n              <XAxis\n                dataKey=\"Weight\"\n                label={{\n                  value: \"Weight\",\n                  position: \"insideBottomRight\",\n                  offset: 0,\n                }}\n              />\n              <YAxis\n                label={{ value: \"Height\", angle: -90, position: \"insideLeft\" }}\n              />\n              <Tooltip />\n            </LineChart>\n          </Grid>\n\n          <Grid item xs={6} my={5}>\n            <LineChart width={600} height={300} data={response}>\n              <Line\n                type=\"monotone\"\n                dataKey=\"Width\"\n                stroke=\"#8884d8\"\n                dot={<CustomizedDot />}\n              />\n              <CartesianGrid stroke=\"#ccc\" />\n              <XAxis\n                dataKey=\"Weight\"\n                label={{\n                  value: \"Weight\",\n                  position: \"insideBottomRight\",\n                  offset: 0,\n                }}\n              />\n              <YAxis\n                label={{ value: \"Width\", angle: -90, position: \"insideLeft\" }}\n              />\n              <Tooltip />\n            </LineChart>\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n};\n\nexport default Home;\n","import React from 'react'\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport { SnackbarProvider } from 'notistack';\n\nfunction App(){\n    return (\n      <div>\n        <SnackbarProvider maxSnack={3}>\n          <Header />\n          <Home />\n        </SnackbarProvider>\n      </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}